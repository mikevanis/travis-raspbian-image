#!/bin/bash

echo "Hello. This is setup."

# Set up openFrameworks constants
OF_VERSION="v0.9.8"
OF_FILE="of_v0.9.8_linuxarmv6l_release.tar.gz"
OF_URL="http://openframeworks.cc/versions/$OF_VERSION/$OF_FILE"
GPU_MEM=256

# Setting some environment variables
echo "OF_VERSION=${OF_VERSION}" >> /etc/environment

# Replace /boot/cmdline.txt since it contains root device mapping to a PARTUUID that
# changed during parted resize. We try to disable the autoresize here as well.
echo "Replace /boot/cmdline.txt"
echo "dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait quiet" > "${mount}/boot/cmdline.txt"
cat "${mount}/boot/cmdline.txt"

# Replace /etc/fstab since the non existing PARTUUID has to be changed here as well.
echo "Replace /etc/fstab"
echo "proc            /proc           proc    defaults          0       0" > "${mount}/etc/fstab"
echo "/dev/mmcblk0p1  /boot           vfat    defaults          0       2" >> "${mount}/etc/fstab"
echo "/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1" >> "${mount}/etc/fstab"
cat "${mount}/etc/fstab"

# Give me number of cores avail!
cores=$(nproc)
echo "Number of processor cores: ${cores}"

# Debug disk space.
echo "Checking disk space."
df -h

# Disable automatic filesystem expansion on boot
#rm /usr/lib/raspi-config/init_resize.sh
rm /etc/init.d/resize2fs_once
rm /etc/rc3.d/S01resize2fs_once

echo "Setting hostname."
echo "openFrameworks" > /etc/hostname
cat /etc/hostname

echo "Setting gpu_mem."
if grep -q "gpu_mem" /boot/config.txt
then
    sed -i "s/gpu_mem.*/gpu_mem=${GPU_MEM}/" /boot/config.txt
else
    echo "gpu_mem=${GPU_MEM}" >> /boot/config.txt
fi
cat /boot/config.txt | grep "gpu_mem"

echo "Installing required packages..."
apt-get -y update
apt-get -y install git
apt-get -y install python3-picamera
apt-get -y install libhdf5-dev libhdf5-serial-dev libhdf5-100
apt-get -y install libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5
apt-get -y install libatlas-base-dev
apt-get -y install libjasper-dev

cd /home/pi

echo "Installing pip for python3..."
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py

echo "Installing OpenCV with pip..."
pip3 install opencv-contrib-python

echo "Testing picamera and OpenCV installation..."
python3 -c "import picamera"
python3 -c "import cv2"
#wget "${OF_URL}"
#mkdir openFrameworks
#tar vxfz "${OF_FILE}" -C openFrameworks --strip-components 1
#cd /home/pi/openFrameworks/scripts/linux/debian

# This is needed to install everything automatically without interaction
#sed -i "s/apt-get/apt-get -y/g" install_dependencies.sh

#./install_dependencies.sh
#make -j$(nproc) Release -C /home/pi/openFrameworks/libs/openFrameworksCompiled/project

# Test installation
#echo "Compiling polygonExample."
#cd /home/pi/openFrameworks/examples/graphics/polygonExample
#make -j$(nproc)

#echo "Setting up to run on boot."
#crontab -l > mycron
#echo "@reboot /home/pi/openFrameworks/examples/graphics/polygonExample/bin/polygonExample" >> mycron
#crontab mycron
#rm mycron

echo "Congratulations! Your image has been setup!"
